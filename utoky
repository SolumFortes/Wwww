// ==UserScript==
// @name         √ötoky a CAPTCHA
// @namespace    http://tampermonkey.net/
// @version      1.1
// @description  Odes√≠l√° upozornƒõn√≠ na detekci CAPTCHA v Divok√Ωch kmenech + na √∫toky.
// @author       Inno games
// @match        https://*.divokekmeny.cz/game.php?*
// @grant        GM_xmlhttpRequest
// @connect      discord.com
// ==/UserScript==

const webhookURLcaptcha = "https://discord.com/api/webhooks/1327564714766635108/y5VPDuoqoBGh1jYDIC3-aidWyhkBR8Pw-UAex-Xi0GXaMjsSuqLWTAVB-LGuAMuiDQIP";
const webhookURLutoky = "https://discord.com/api/webhooks/1327533765769297920/r1bLabnk6MSSYwBcTqYG4_CXVIj47d94Drfu9gwqhNxbmDdKuZyKtIxWZkpd6YKlUCdY";
const time = 10000; // 10 sekund refresh
const captchaCooldownTime = 5 * 60 * 1000; // 5 minut cooldown

let lastCaptchaPingTime = 0; // ƒåas posledn√≠ho pingu CAPTCHA

// Z√≠sk√° jm√©no hr√°ƒçe z DOM
function getPlayerName() {
    try {
        const playerElement = document.querySelector('td.menu-column-item > a[href*="info_player"]');
        if (playerElement) {
            const playerName = playerElement.textContent.trim();
            console.log("Jm√©no hr√°ƒçe detekov√°no:", playerName);
            return playerName;
        } else {
            console.warn("Element s jm√©nem hr√°ƒçe nebyl nalezen.");
            return "Nezn√°m√Ω hr√°ƒç";
        }
    } catch (error) {
        console.error("Chyba p≈ôi z√≠sk√°v√°n√≠ jm√©na hr√°ƒçe:", error);
        return "Nezn√°m√Ω hr√°ƒç";
    }
}

const playerName = getPlayerName();

// Funkce pro z√≠sk√°n√≠ aktu√°ln√≠ho ƒçasu
function getCurrentTime() {
    const now = new Date();
    const hours = String(now.getHours()).padStart(2, '0');
    const minutes = String(now.getMinutes()).padStart(2, '0');
    const seconds = String(now.getSeconds()).padStart(2, '0');
    return `${hours}:${minutes}:${seconds}`;
}

// Odes√≠l√° zpr√°vu na Discord p≈ôes webhook
function sendDiscordMessage(message, hook) {
    console.log("Odes√≠l√°n√≠ zpr√°vy na Discord:", message);

    const separator = "\n\n===============\n\n";  // Oddƒõlovaƒç mezi zpr√°vami
    const world = window.location.hostname.split('.')[0];  // Extrahuje svƒõt z URL
    const worldMessage = `üåç **Svƒõt: ${world}**`;  // Form√°t pro svƒõt
    const timeMessage = `‚è∞ **ƒåas: ${getCurrentTime()}**`;  // P≈ôid√°n√≠ aktu√°ln√≠ho ƒçasu
    const fullMessage = separator + worldMessage + "\n" + message + "\n" + timeMessage + "\n\n===============";  // P≈ôid√°n√≠ svƒõta, ƒçasu a oddƒõlovaƒç≈Ø

    GM_xmlhttpRequest({
        method: "POST",
        url: hook,
        headers: {
            "Content-Type": "application/json"
        },
        data: JSON.stringify({ content: `${fullMessage} @here` }),  // Ping @here je na konci zpr√°vy
        onload: function (response) {
            if (response.status === 204) {
                console.log("Zpr√°va √∫spƒõ≈°nƒõ odesl√°na na Discord.");
            } else {
                console.error("Chyba p≈ôi odes√≠l√°n√≠ zpr√°vy na Discord:", response.status, response.statusText);
            }
        },
        onerror: function (error) {
            console.error("Chyba p≈ôi po≈æadavku:", error);
        }
    });
}

// Kontroluje str√°nku na CAPTCHA
function checkForCAPTCHA() {
    const captchaDetectedKey = "captchaDetected";

    const botCheck = document.querySelector('#bot_check');
    const botProtectionQuest = document.querySelector('#botprotection_quest');
    const hCaptchaIframe = document.querySelector('div.captcha iframe');

    if (botCheck || botProtectionQuest || hCaptchaIframe) {
        const currentTime = new Date().getTime();
        if (!localStorage.getItem(captchaDetectedKey) || (currentTime - lastCaptchaPingTime) >= captchaCooldownTime) {
            localStorage.setItem(captchaDetectedKey, "true");
            sendDiscordMessage(`üéÆ **${playerName}** üéÆ
‚ö†Ô∏è **CAPTCHA!** ‚ö†Ô∏è`, webhookURLcaptcha);
            lastCaptchaPingTime = currentTime;  // Aktualizujeme ƒças posledn√≠ho pingu
        }
    } else {
        if (localStorage.getItem(captchaDetectedKey)) {
            localStorage.removeItem(captchaDetectedKey);
        }
    }
}

function checkForAttacks(tag) {
    const prevAttacks = localStorage.getItem(tag) || "0";

    const attackCountElement = document.querySelector('#incomings_amount');
    if (!attackCountElement) {
        console.log("Nepoda≈ôilo se naj√≠t element pro poƒçet √∫tok≈Ø. Resetujeme flag.");
        localStorage.setItem(tag, "0");
        return;
    }

    const attackCount = parseInt(attackCountElement.textContent.trim(), 10);
    console.log("Poƒçet p≈ô√≠choz√≠ch √∫tok≈Ø:", attackCount);

    if (attackCount > 0 && prevAttacks != attackCount) {
        localStorage.setItem(tag, attackCount);
        const villageCoordElement = document.querySelector('b.nowrap');
        const villageCoords = villageCoordElement ? villageCoordElement.textContent.trim() : 'nezn√°m√© sou≈ôadnice';
        console.log("Sou≈ôadnice vesnice:", villageCoords);
        sendDiscordMessage(`üéÆ **${playerName}** üéÆ
‚öîÔ∏è **M√°≈° ${attackCount} √∫tok≈Ø!**`, webhookURLutoky);
    } else if (attackCount == 0) {
        localStorage.setItem(tag, "0");
    }
    else {
        console.log("Neodesl√°no - Buƒè √∫toky jsou 0, nebo ji≈æ bylo upozornƒõn√≠ odesl√°no.");
    }
}

function getPlayerId(callback) {
    try {
        const href = document.querySelector('#menu_row2_village').children[0].getAttribute('href');
        if (!href) {
            console.error("Chyba: Nepoda≈ôilo se naj√≠t href v #menu_row2_village.");
            return;
        }

        const params = href.split("?")[1];
        const urlParams = new URLSearchParams(params);
        const villageId = urlParams.get("village");
        if (!villageId) {
            console.error("Chyba: Nepoda≈ôilo se z√≠skat villageId z URL.");
            return;
        }

        const base_url = window.location.origin;
        const url = `${base_url}/map/village.txt`;

        fetch(url)
            .then(response => response.text())
            .then(result => {
                const villagesList = result.split("\n");
                for (let index = 0; index < villagesList.length; index++) {
                    const line = villagesList[index].trim();
                    if (!line) continue;

                    const split = line.split(",");
                    if (split[0] === villageId) {
                        const playerId = split[4];
                        console.log("ID hr√°ƒçe:", playerId);
                        if (callback) callback(playerId);
                        return;
                    }
                }
                console.warn("Village ID nebylo nalezeno v seznamu.");
                if (callback) callback(null);
            })
            .catch(error => {
                console.error("Chyba p≈ôi z√≠sk√°v√°n√≠ dat vesnice:", error);
                if (callback) callback(null);
            });
    } catch (e) {
        console.error("Neƒçekan√° chyba:", e.message);
        if (callback) callback(null);
    }
}

(function () {
    'use strict';
    getPlayerId(function (playerId) {
        console.log("Kontrola CAPTCHA...");

        if (!playerId) {
            console.error("Chyba: Nepoda≈ôilo se z√≠skat ID hr√°ƒçe.");
            return;
        }

        const world = `$(location).attr('href').split("/")[2].split(".")[0]`;
        const tag = `${world}:${playerId}:${playerName}`;

        setInterval(() => {
            console.log("Kontrola po 10 sekund√°ch.");
            checkForAttacks(tag);
            checkForCAPTCHA();
        }, time);
    });
})();
